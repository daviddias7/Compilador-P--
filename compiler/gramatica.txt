<programa> ::= program ident ; <corpo> .
<corpo> ::= <dc> begin <comandos> end
<dc> ::= <dc_c> <dc_v> <dc_p>
<dc_c> ::= const ident = <numero> ; <dc_c> | λ
<dc_v> ::= var <variaveis> : <tipo_var> ; <dc_v> | λ
<tipo_var> ::= real | integer
<variaveis> ::= ident <mais_var>
<mais_var> ::= , <variaveis> | λ
<dc_p> ::= procedure ident <parametros> ; <corpo_p> <dc_p> | λ
<parametros> ::= ( <lista_par> ) | λ
<lista_par> ::= <variaveis> : <tipo_var> <mais_par>
<mais_par> ::= ; <lista_par> | λ
<corpo_p> ::= <dc_loc> begin <comandos> end ;
<dc_loc> ::= <dc_v>
<lista_arg> ::= ( <argumentos> ) | λ
<argumentos> ::= ident <mais_ident>
<mais_ident> ::= ; <argumentos> | λ
<pfalsa> ::= else <cmd> | λ
<comandos> ::= <cmd> ; <comandos> | λ
<cmd> ::= read ( <variaveis> ) | write ( <variaveis> ) | while ( <condicao> ) do <cmd> | if <condicao> then <cmd> <pfalsa> | ident <cmd'> | begin <comandos> end
<cmd'> ::= := <expressao> | <lista_arg>
<condicao> ::= <expressao> <relacao> <expressao>
<relacao> ::= = | <> | >= | <= | > | <
<expressao> ::= <termo> <outros_termos>
<op_un> ::= + | - | λ
<outros_termos> ::= <op_ad> <termo> <outros_termos> | λ
<op_ad> ::= + | -
<termo> ::= <op_un> <fator> <mais_fatores>
<mais_fatores> ::= <op_mul> <fator> <mais_fatores> | λ
<op_mul> ::= * | /
<fator> ::= ident | <numero> | ( <expressao> )
<numero> ::= numero_int | numero_real
